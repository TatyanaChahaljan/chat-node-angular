{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/chat/chat.component.html","./src/app/dialog/prompt-dialog.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/chat/chat.component.ts","./src/app/chat/chat.module.ts","./src/app/dialog/prompt-dialog.component.ts","./src/app/dialog/prompt-dialog.module.ts","./src/app/material/material.module.ts","./src/app/services/chat.service.ts","./src/constants.ts","./src/environments/environment.ts","./src/main.ts","ws (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"wrapper\\\">\\n    <app-chat-component></app-chat-component>\\n</div>\\n\"","module.exports = \"<h2> Chat box </h2>\\n\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\n    <form [formGroup]=\\\"messageForm\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"40px\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-form-field>\\n                <input placeholder=\\\"Type message\\\"\\n                       id=\\\"message\\\"\\n                       formControlName=\\\"message\\\"\\n                       name=\\\"message\\\"\\n                       matInput\\n                       value=\\\"\\\"\\n                       type=\\\"text\\\">\\n            </mat-form-field>\\n            <button type=\\\"submit\\\"\\n                    [disabled]=\\\"messageForm.invalid\\\"\\n                    (click)=\\\"sendMessage()\\\"\\n                    mat-raised-button>Send message\\n            </button>\\n        </div>\\n    </form>\\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutGap=\\\"40px\\\">\\n    <mat-list role=\\\"list\\\" *ngIf=\\\"connects\\\">\\n        <mat-list-item *ngFor=\\\"let connect of connects\\\">\\n            <ng-container *ngIf=\\\"connect.type === 'new-user'; else elseBlock\\\">\\n                <i> {{connect.name}}\\n                    <small>join the chat..</small>\\n                </i>\\n            </ng-container>\\n            <ng-template #elseBlock>\\n                <i style=\\\"color: red\\\"> {{connect.name}}\\n                    <small>left the chat..</small>\\n                </i>\\n            </ng-template>\\n        </mat-list-item>\\n    </mat-list>\\n    <mat-list role=\\\"list\\\" *ngIf=\\\"messages\\\">\\n        <mat-list-item *ngFor=\\\"let message of messages\\\">\\n            <small>Time: {{message.time}}, user: {{message.user}}:</small> &nbsp;\\n            <span [ngStyle]=\\\"{'color': message.color}\\\"> {{message.message}} </span>\\n        </mat-list-item>\\n    </mat-list>\\n</div>\\n\"","module.exports = \"<form [formGroup]=\\\"promptForm\\\" (ngSubmit)=\\\"submit()\\\">\\n    <mat-dialog-content>\\n        <mat-form-field>\\n            <input placeholder=\\\"What's your name?\\\"\\n                   type=\\\"text\\\"\\n                   id=\\\"name\\\"\\n                   formControlName=\\\"name\\\"\\n                   matInput\\n                   value=\\\"\\\">\\n        </mat-form-field>\\n    </mat-dialog-content>\\n    <mat-dialog-actions align=\\\"center\\\">\\n        <button mat-raised-button (click)=\\\"onNoClick()\\\">No Thanks</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"promptForm.invalid\\\" mat-raised-button [mat-dialog-close]=\\\"name\\\"\\n                cdkFocusInitial>Ok\\n        </button>\\n    </mat-dialog-actions>\\n</form>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ConfirmDialogModule } from './dialog/prompt-dialog.module';\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ConfirmDialogModule,\n    ChatModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material';\nimport { Subscription } from 'rxjs';\n\nimport { ChatService } from '../services/chat.service';\nimport { PromptDialogComponent } from '../dialog/prompt-dialog.component';\n\ninterface SocketData {\n  type: string;\n  data: any;\n}\n\n@Component({\n  selector: 'app-chat-component',\n  templateUrl: './chat.component.html',\n})\n\nexport class ChatComponent implements OnInit, OnDestroy {\n  public message;\n  public userName;\n  public messages: string[] = [];\n  public connects = [];\n  public subscriptions: Subscription[] = [];\n  public color: string = `#${(0x1000000 + (Math.random()) * 0xffffff).toString(16).substr(1, 6)}`;\n  public messageForm: FormGroup = this.fb.group({\n    message: ['', [Validators.required]],\n  });\n\n  constructor(\n    private chatService: ChatService,\n    private dialog: MatDialog,\n    private fb: FormBuilder\n  ) {\n  }\n\n  sendMessage() {\n    this.chatService.sendMessage({\n      message: this.messageForm.get('message').value,\n      user: this.userName,\n      color: this.color\n    });\n    this.messageForm.reset();\n  }\n\n  ngOnInit() {\n    this.showModal();\n    this.subscriptions.push(\n      this.chatService.userDisconnect().subscribe((socketData: SocketData) => {\n        if (!socketData) {\n          return;\n        }\n        const {type, data} = socketData;\n        this.connects.push({type, name: `${data.name}`});\n      }),\n\n      this.chatService.getMessages().subscribe((socketData: SocketData) => {\n          const {data} = socketData;\n          this.messages.push(data);\n        }\n      ),\n\n      this.chatService.getUser().subscribe((socketData: SocketData) => {\n          if (!socketData) {\n            return;\n          }\n          const {data, type} = socketData;\n          this.connects.push({type, name: `${data.name}`});\n        }\n      ),\n    );\n  }\n\n  showModal() {\n    const dialogRef = this.dialog.open(PromptDialogComponent, {\n      width: '400px',\n    });\n\n    dialogRef.afterClosed().subscribe((data: string) => {\n      this.userName = data || 'guest';\n      this.chatService.userConnect(this.userName);\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexModule } from '@angular/flex-layout';\n\nimport { ChatComponent } from './chat.component';\nimport { MaterialModule } from '../material/material.module';\n\n@NgModule({\n  declarations: [\n    ChatComponent\n  ],\n  providers: [],\n  exports: [ChatComponent],\n  imports: [\n    MaterialModule,\n    CommonModule,\n    ReactiveFormsModule,\n    FlexModule\n  ]\n})\nexport class ChatModule {\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-prompt-dialog',\n  templateUrl: './prompt-dialog.component.html',\n})\nexport class PromptDialogComponent {\n  public name = '';\n  public promptForm: FormGroup = this.fb.group({name: ['', [Validators.required]]});\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) private data: any,\n    private dialogRef: MatDialogRef<PromptDialogComponent>,\n    private fb: FormBuilder\n  ) {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  submit() {\n    this.dialogRef.close(this.promptForm.get('name').value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { PromptDialogComponent } from './prompt-dialog.component';\nimport { MaterialModule } from '../material/material.module';\n\n@NgModule({\n  declarations: [PromptDialogComponent],\n  entryComponents: [PromptDialogComponent],\n  imports: [\n    MaterialModule,\n    FormsModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class ConfirmDialogModule {\n}\n","import { NgModule } from '@angular/core';\nimport {\n  MatButtonModule,\n  MatListModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatDialogModule,\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDialogModule,\n  ],\n\n  exports: [\n    MatButtonModule,\n    MatListModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatDialogModule\n  ],\n})\nexport class MaterialModule {\n}\n","import { Observable } from 'rxjs';\nimport * as io from 'socket.io-client';\nimport { Injectable } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { constants } from '../../constants';\n\n@Injectable({providedIn: 'root'})\nexport class ChatService {\n  private url = environment.url;\n  private socket: any;\n\n  constructor() {\n    this.socket = io(this.url);\n  }\n\n  sendMessage(data) {\n    this.socket.emit(constants.ADD_MESSAGE, data);\n  }\n\n  userConnect(username) {\n    this.socket.emit(constants.USER_CONNECT, username);\n  }\n\n  userDisconnect() {\n    return new Observable(observer => {\n        this.socket.on(constants.DISCONNECT, (data) => {\n          observer.next(data);\n        });\n      }\n    );\n  }\n\n  getMessages() {\n    return new Observable(observer => {\n      this.socket.on(constants.NEW_MESSAGE, (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  }\n\n  getUser() {\n    return new Observable(observer => {\n      this.socket.on(constants.NEW_USER, (data) => {\n        observer.next(data);\n      });\n      return () => {\n        this.socket.disconnect();\n      };\n    });\n  }\n}\n","export const constants = {\n  DISCONNECT: 'disconnect',\n  USER_CONNECT: 'user-connect',\n  ADD_MESSAGE: 'add-message',\n  NEW_USER: 'new-user',\n  NEW_MESSAGE: 'new-message',\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://localhost:5000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}